{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Contacts API",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "REST API для керування контактами з авторизацією, пагінацією та завантаженням фото (Cloudinary).\n"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": null
    }
  ],
  "tags": [
    {
      "name": "Contacts",
      "description": "Операції з контактами"
    }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "List contacts",
        "operationId": "listContacts",
        "description": "Повертає список контактів користувача з пагінацією/фільтрами.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/SortBy"
          },
          {
            "$ref": "#/components/parameters/SortOrder"
          },
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/IsFavourite"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsPage"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create contact",
        "operationId": "createContact",
        "description": "Створює новий контакт. Підтримує JSON або multipart/form-data (для фото).",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactCreate.json"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ContactCreate.multipart"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/contacts/{contactId}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contact by id",
        "operationId": "getContact",
        "description": "Повертає контакт за ідентифікатором.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ContactId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update contact",
        "operationId": "updateContact",
        "description": "Оновлює контакт. Підтримує JSON або multipart/form-data (оновлення фото).",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ContactId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactUpdate.json"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ContactUpdate.multipart"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete contact",
        "operationId": "deleteContact",
        "description": "Видаляє контакт за ідентифікатором.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ContactId"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "parameters": {
      "Page": {
        "name": "page",
        "in": "query",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        }
      },
      "PerPage": {
        "name": "perPage",
        "in": "query",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "default": 10
        }
      },
      "SortBy": {
        "name": "sortBy",
        "in": "query",
        "schema": {
          "type": "string",
          "enum": [
            "name",
            "email",
            "phoneNumber",
            "createdAt"
          ],
          "default": "name"
        }
      },
      "SortOrder": {
        "name": "sortOrder",
        "in": "query",
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "default": "asc"
        }
      },
      "Type": {
        "name": "type",
        "in": "query",
        "schema": {
          "type": "string",
          "enum": [
            "work",
            "home",
            "personal"
          ]
        }
      },
      "IsFavourite": {
        "name": "isFavourite",
        "in": "query",
        "schema": {
          "type": "boolean"
        }
      },
      "ContactId": {
        "name": "contactId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "MongoDB ObjectId contact"
      }
    },
    "schemas": {
      "Contact": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "68de953c0fcf3f0c5746eed1"
          },
          "userId": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "example": "John Smith"
          },
          "phoneNumber": {
            "type": "string",
            "example": 380991112233
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "format": "email",
            "example": "john@example.com"
          },
          "isFavourite": {
            "type": "boolean",
            "default": false
          },
          "contactType": {
            "type": "string",
            "enum": [
              "work",
              "home",
              "personal"
            ],
            "example": "work"
          },
          "photo": {
            "type": [
              "string",
              "null"
            ],
            "description": "https://res.cloudinary.com/dbtx6wtmg/image/upload/v1760094719/iigycgafzdnaslrkc1qz.jpg"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "_id",
          "name",
          "phoneNumber",
          "contactType"
        ]
      },
      "ContactsPage": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "page": {
            "type": "integer",
            "example": 1
          },
          "perPage": {
            "type": "integer",
            "example": 10
          },
          "totalItems": {
            "type": "integer",
            "example": 42
          },
          "totalPages": {
            "type": "integer",
            "example": 5
          },
          "hasPreviousPage": {
            "type": "boolean",
            "example": false
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "page",
          "perPage",
          "totalItems",
          "totalPages",
          "hasPreviousPage",
          "hasNextPage"
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 404
          },
          "message": {
            "type": "string",
            "example": "Contact not found"
          },
          "data": {
            "nullable": true
          }
        },
        "required": [
          "status",
          "message"
        ]
      },
      "ContactCreate.json": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "isFavourite": {
            "type": "boolean",
            "default": false
          },
          "contactType": {
            "type": "string",
            "enum": [
              "work",
              "home",
              "personal"
            ]
          }
        },
        "required": [
          "name",
          "phoneNumber",
          "contactType"
        ]
      },
      "ContactCreate.multipart": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "isFavourite": {
            "type": "boolean"
          },
          "contactType": {
            "type": "string",
            "enum": [
              "work",
              "home",
              "personal"
            ]
          },
          "photo": {
            "type": "string",
            "format": "binary"
          }
        },
        "required": [
          "name",
          "phoneNumber",
          "contactType"
        ]
      },
      "ContactUpdate.json": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "isFavourite": {
            "type": "boolean"
          },
          "contactType": {
            "type": "string",
            "enum": [
              "work",
              "home",
              "personal"
            ]
          }
        },
        "additionalProperties": false
      },
      "ContactUpdate.multipart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ContactUpdate.json"
          },
          {
            "type": "object",
            "properties": {
              "photo": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        ]
      }
    },
    "responses": {
      "Unauthorized": {
        "description": "Not authorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  }
}